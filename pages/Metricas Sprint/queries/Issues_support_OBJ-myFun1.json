{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "myFun1",
    "fullyQualifiedName": "Issues_support_OBJ.myFun1",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "invalids": [
        "No datasource configuration found. Please configure it and try again."
      ],
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Metricas Sprint",
    "collectionId": "Metricas Sprint_Issues_support_OBJ",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  let sql = Support_Tasks.data;\n  let sprint = Get_Sprints.data.find(x => x['ID'] = Sprint_Select.selectedOptionValue);\n  let issues = sql.map(x => {\n    return {\n      date: moment(x['Resolved']).format('yyyy-MM-DD'),\n      point: x['Story_Points']\n    };\n  });\n  let resol_per_day = _.groupBy(issues, issue => issue['date']);\n  return resol_per_day;\n}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Metricas Sprint_Issues_support_OBJ.myFun1",
  "deleted": false,
  "gitSyncId": "62be16c8612750023eb0047f_62be16c8612750023eb0048c"
}